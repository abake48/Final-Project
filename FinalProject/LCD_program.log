KCPSM6 Assembler log file for program 'C:\Users\The Masterpiece!!!\Documents\GitHub\Final-Project\FinalProject\LCD_program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 24 Apr 2015
Assembly timestamp: 14:40:35

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 089 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 138
Memory locations available: 3958


Assembly listing

 Addr Code                    Instruction

 000                          ;------------------------------------------;
 000                          ;     Defining Delay lengths     ;
 000                          ;------------------------------------------;
 000                          CONSTANT delay_1us_constant, 24'd
 000                          CONSTANT delay_2us_constant, 48'd ; 2 * 24 clock cycles(1us)
 000                          CONSTANT delay_EN_constant, 168'd ; 7 * 24 clock cycles(1us)
 000                          ;NAMEREG sA , data7_4
 000                          ;NAMEREG sB , data3_0
 000                          ;NAMEREG sC , rs
 000                          ;NAMEREG sD , rw
 000                          ;NAMEREG sE , en
 000                          ;------------------------------------------;
 000                          ;         Defining Ports and Regs      ;
 000                          ;------------------------------------------;
 000                          CONSTANT port_up, 00              ; Read inputs from buttons
 000                          CONSTANT port_down, 01
 000                          CONSTANT port_center, 02
 000                          CONSTANT port_data, 03            ; Port for outputting 4-bits of data
 000                          ;CONSTANT port_EN  ,  04   ; Port for Enable output
 000                          ;CONSTANT port_RS  ,  05   ; Port for Register Select output
 000                          ;CONSTANT port_RW  ,  06   ; Port for Read/Write output
 000                          ;--------------------------------------------;
 000                          ; ASCII labels                               ;
 000                          ;--------------------------------------------;
 000                          CONSTANT ascii_SPACE, 20          ; ascii code
 000                          CONSTANT ascii_EXCLAIM, 21        ; ascii code
 000                          CONSTANT ascii_DBLQUOT, 22        ; ascii code
 000                          CONSTANT ascii_NUMSIGN, 23        ; ascii code
 000                          CONSTANT ascii_DOLLAR, 24         ; ascii code
 000                          CONSTANT ascii_PERCENT, 25        ; ascii code
 000                          CONSTANT ascii_AMP, 26            ; ascii code
 000                          CONSTANT ascii_SINQUOT, 27        ; ascii code
 000                          CONSTANT ascii_LPAREN, 28         ; ascii code
 000                          CONSTANT ascii_RPAREN, 29         ; ascii code
 000                          CONSTANT ascii_ASTERISK, 2A       ; ascii code
 000                          CONSTANT ascii_PLUS, 2B           ; ascii code
 000                          CONSTANT ascii_COMMA, 2C          ; ascii code
 000                          CONSTANT ascii_MINUS, 2D          ; ascii code
 000                          CONSTANT ascii_PERIOD, 2E         ; ascii code
 000                          CONSTANT ascii_FWDSLASH, 2F       ; ascii code
 000                          CONSTANT ascii_0, 30              ; ascii code
 000                          CONSTANT ascii_1, 31              ; ascii code
 000                          CONSTANT ascii_2, 32              ; ascii code
 000                          CONSTANT ascii_3, 33              ; ascii code
 000                          CONSTANT ascii_4, 34              ; ascii code
 000                          CONSTANT ascii_5, 35              ; ascii code
 000                          CONSTANT ascii_6, 36              ; ascii code
 000                          CONSTANT ascii_7, 37              ; ascii code
 000                          CONSTANT ascii_8, 38              ; ascii code
 000                          CONSTANT ascii_9, 39              ; ascii code
 000                          CONSTANT ascii_COLON, 3A          ; ascii code
 000                          CONSTANT ascii_SEMI, 3B           ; ascii code
 000                          CONSTANT ascii_LESS, 3C           ; ascii code
 000                          CONSTANT ascii_EQUAL, 3D          ; ascii code
 000                          CONSTANT ascii_GREATER, 3E        ; ascii code
 000                          CONSTANT ascii_QUESTION, 3F       ; ascii code
 000                          CONSTANT ascii_CIRCAT, 40         ; ascii code
 000                          CONSTANT ascii_A, 41              ; ascii code
 000                          CONSTANT ascii_B, 42              ; ascii code
 000                          CONSTANT ascii_C, 43              ; ascii code
 000                          CONSTANT ascii_D, 44              ; ascii code
 000                          CONSTANT ascii_E, 45              ; ascii code
 000                          CONSTANT ascii_F, 46              ; ascii code
 000                          CONSTANT ascii_G, 47              ; ascii code
 000                          CONSTANT ascii_H, 48              ; ascii code
 000                          CONSTANT ascii_I, 49              ; ascii code
 000                          CONSTANT ascii_J, 4A              ; ascii code
 000                          CONSTANT ascii_K, 4B              ; ascii code
 000                          CONSTANT ascii_L, 4C              ; ascii code
 000                          CONSTANT ascii_M, 4D              ; ascii code
 000                          CONSTANT ascii_N, 4E              ; ascii code
 000                          CONSTANT ascii_O, 4F              ; ascii code
 000                          CONSTANT ascii_P, 50              ; ascii code
 000                          CONSTANT ascii_Q, 51              ; ascii code
 000                          CONSTANT ascii_R, 52              ; ascii code
 000                          CONSTANT ascii_S, 53              ; ascii code
 000                          CONSTANT ascii_T, 54              ; ascii code
 000                          CONSTANT ascii_U, 55              ; ascii code
 000                          CONSTANT ascii_V, 56              ; ascii code
 000                          CONSTANT ascii_W, 57              ; ascii code
 000                          CONSTANT ascii_X, 58              ; ascii code
 000                          CONSTANT ascii_Y, 59              ; ascii code
 000                          CONSTANT ascii_Z, 5A              ; ascii code
 000                          CONSTANT ascii_LBKT, 5B           ; ascii code
 000                          CONSTANT ascii_BKSLASH, 5C        ; ascii code
 000                          CONSTANT ascii_RBKT, 5D           ; ascii code
 000                          CONSTANT ascii_CARET, 5E          ; ascii code
 000                          CONSTANT ascii_UNDER, 5F          ; ascii code
 000                          CONSTANT ascii_TICK, 60           ; ascii code
 000                          CONSTANT ascii_a, 61              ; ascii code
 000                          CONSTANT ascii_b, 62              ; ascii code
 000                          CONSTANT ascii_c, 63              ; ascii code
 000                          CONSTANT ascii_d, 64              ; ascii code
 000                          CONSTANT ascii_e, 65              ; ascii code
 000                          CONSTANT ascii_f, 66              ; ascii code
 000                          CONSTANT ascii_g, 67              ; ascii code
 000                          CONSTANT ascii_h, 68              ; ascii code
 000                          CONSTANT ascii_i, 69              ; ascii code
 000                          CONSTANT ascii_j, 6A              ; ascii code
 000                          CONSTANT ascii_k, 6B              ; ascii code
 000                          CONSTANT ascii_l, 6C              ; ascii code
 000                          CONSTANT ascii_m, 6D              ; ascii code
 000                          CONSTANT ascii_n, 6E              ; ascii code
 000                          CONSTANT ascii_o, 6F              ; ascii code
 000                          CONSTANT ascii_p, 70              ; ascii code
 000                          CONSTANT ascii_q, 71              ; ascii code
 000                          CONSTANT ascii_r, 72              ; ascii code
 000                          CONSTANT ascii_s, 73              ; ascii code
 000                          CONSTANT ascii_t, 74              ; ascii code
 000                          CONSTANT ascii_u, 75              ; ascii code
 000                          CONSTANT ascii_v, 76              ; ascii code
 000                          CONSTANT ascii_w, 77              ; ascii code
 000                          CONSTANT ascii_x, 78              ; ascii code
 000                          CONSTANT ascii_y, 79              ; ascii code
 000                          CONSTANT ascii_z, 7A              ; ascii code
 000                          CONSTANT ascii_LBRACE, 7B         ; ascii code
 000                          CONSTANT ascii_VBAR, 7C           ; ascii code
 000                          CONSTANT ascii_RBRACE, 7D         ; ascii code
 000                          CONSTANT ascii_TILDE, 7E          ; ascii code
 000                          CONSTANT ascii_DEL, 7F            ; ascii code
 000                          ;-------------------------------------------;
 000                          ;    Prayer       ;
 000                          ;-------------------------------------------;
 000  28001                   ENABLE INTERRUPT
 001  20056                   CALL 056[LCD_reset]
 002                          ;CALL delay_40us
 002                          ;-------------------------------------------;
 002                          ;    Defining Routines   ;
 002                          ;-------------------------------------------;
 002  01018        delay_1us: LOAD s0, 18[delay_1us_constant]
 003  19001         wait_1us: SUB s0, 01
 004  36003                   JUMP NZ, 003[wait_1us]
 005  25000                   RETURN 
 006  01030        delay_2us: LOAD s0, 30[delay_2us_constant]
 007  19001         wait_2us: SUB s0, 01
 008  36007                   JUMP NZ, 007[wait_2us]
 009  25000                   RETURN 
 00A  010A8         delay_EN: LOAD s0, A8[delay_EN_constant]
 00B  19001          wait_EN: SUB s0, 01
 00C  3600B                   JUMP NZ, 00B[wait_EN]
 00D  25000                   RETURN 
 00E  01114       delay_40us: LOAD s1, 14[20'd]                 ;20 x 2us = 40us
 00F  20006        wait_40us: CALL 006[delay_2us]
 010  19101                   SUB s1, 01
 011  3600F                   JUMP NZ, 00F[wait_40us]
 012  25000                   RETURN 
 013  01219        delay_1ms: LOAD s2, 19[25'd]                 ;25 x 40us = 1ms
 014  2000E         wait_1ms: CALL 00E[delay_40us]
 015  19201                   SUB s2, 01
 016  36014                   JUMP NZ, 014[wait_1ms]
 017  25000                   RETURN 
 018  01232        delay_2ms: LOAD s2, 32[50'd]                 ;50 x 40us = 2ms
 019  2000E         wait_2ms: CALL 00E[delay_40us]
 01A  19201                   SUB s2, 01
 01B  36019                   JUMP NZ, 019[wait_2ms]
 01C  25000                   RETURN 
 01D  0130F       delay_30ms: LOAD s3, 0F[15'd]                 ;15 x 2ms = 30ms
 01E  20018        wait_30ms: CALL 018[delay_2ms]
 01F  19301                   SUB s3, 01
 020  3601E                   JUMP NZ, 01E[wait_30ms]
 021  25000                   RETURN 
 022                pulse_EN: 
 022  01301                   LOAD s3, 01
 023  2D303                   OUTPUT s3, 03[port_data]
 024  2000A                   CALL 00A[delay_EN]
 025  01300                   LOAD s3, 00
 026  2D303                   OUTPUT s3, 03[port_data]
 027  25000                   RETURN 
 028  0D510       LCD_cursor: TEST s5, 10                       ;test for line 1
 029  3202E                   JUMP Z, 02E[set_line2]
 02A  0350F                   AND s5, 0F                        ;make address in range 80 to 8F for line 1
 02B  05580                   OR s5, 80
 02C  20036                   CALL 036[LCD_write_inst8]         ;instruction write to set cursor
 02D  25000                   RETURN 
 02E  0350F        set_line2: AND s5, 0F                        ;make address in range C0 to CF for line 2
 02F  055C0                   OR s5, C0
 030  20036                   CALL 036[LCD_write_inst8]         ;instruction write to set cursor
 031  25000                   RETURN 
 032  034F8  LCD_write_inst4: AND s4, F8                        ;Enable=1 RS=0 Instruction, RW=0 Write, E=0
 033  2D403                   OUTPUT s4, 03[port_data]          ;set up RS and RW >40ns before enable pulse
 034  20022                   CALL 022[pulse_EN]
 035  25000                   RETURN 
 036  00450  LCD_write_inst8: LOAD s4, s5
 037  034F0                   AND s4, F0                        ;Enable=0 RS=0 Instruction, RW=0 Write, E=0
 038  05408                   OR s4, 08                         ;Enable=1
 039  20032                   CALL 032[LCD_write_inst4]         ;write upper nibble
 03A  20002                   CALL 002[delay_1us]               ;wait >1us
 03B  00450                   LOAD s4, s5                       ;select lower nibble with
 03C  14407                   SL1 s4                            ;Enable=1
 03D  14406                   SL0 s4                            ;RS=0 Instruction
 03E  14406                   SL0 s4                            ;RW=0 Write
 03F  14406                   SL0 s4                            ;E=0
 040  20032                   CALL 032[LCD_write_inst4]         ;write lower nibble
 041  2000E                   CALL 00E[delay_40us]              ;wait >40us
 042  014F0                   LOAD s4, F0                       ;Enable=0 RS=0 Instruction, RW=0 Write, E=0
 043  2D403                   OUTPUT s4, 03[port_data]          ;Release master enable
 044  25000                   RETURN 
 045          LCD_write_data: 
 045  00450                   LOAD s4, s5
 046  034F0                   AND s4, F0
 047  0540C                   OR s4, 0C
 048  2D403                   OUTPUT s4, 03[port_data]
 049  20022                   CALL 022[pulse_EN]
 04A  20002                   CALL 002[delay_1us]
 04B  00450                   LOAD s4, s5
 04C  14407                   SL1 s4
 04D  14407                   SL1 s4
 04E  14406                   SL0 s4
 04F  14406                   SL0 s4
 050  2D403                   OUTPUT s4, 03[port_data]
 051  20022                   CALL 022[pulse_EN]
 052  2000E                   CALL 00E[delay_40us]
 053  014F0                   LOAD s4, F0                       ;Enable=0 RS=0 Instruction, RW=0 Write, E=0
 054  2D403                   OUTPUT s4, 03[port_data]          ;Release master enable
 055  25000                   RETURN 
 056                          ;-------------------------------------------;
 056                          ;   Initialization of LCD   ;
 056                          ;-------------------------------------------;
 056               LCD_reset: 
 056  2001D                   CALL 01D[delay_30ms]              ;wait more that 15ms for display to be ready
 057  01430                   LOAD s4, 30
 058  20032                   CALL 032[LCD_write_inst4]         ;send '3'
 059  20018                   CALL 018[delay_2ms]               ;wait >4.1ms
 05A  20018                   CALL 018[delay_2ms]
 05B  20013                   CALL 013[delay_1ms]
 05C  01430                   LOAD s4, 30
 05D  20032                   CALL 032[LCD_write_inst4]         ;send '3'
 05E  2000E                   CALL 00E[delay_40us]              ;wait >100us
 05F  2000E                   CALL 00E[delay_40us]
 060  2000E                   CALL 00E[delay_40us]
 061  01430                   LOAD s4, 30
 062  20032                   CALL 032[LCD_write_inst4]         ;send '3'
 063  2000E                   CALL 00E[delay_40us]              ;wait >40us
 064  01420                   LOAD s4, 20
 065  20032                   CALL 032[LCD_write_inst4]         ;send '2'
 066  2000E                   CALL 00E[delay_40us]              ;wait >40us
 067  01528                   LOAD s5, 28                       ;Function set
 068  20036                   CALL 036[LCD_write_inst8]
 069  01506                   LOAD s5, 06                       ;Entry mode
 06A  20036                   CALL 036[LCD_write_inst8]
 06B  0150C                   LOAD s5, 0C                       ;Display control
 06C  20036                   CALL 036[LCD_write_inst8]
 06D               LCD_clear: 
 06D  01501                   LOAD s5, 01                       ;Display clear
 06E  20036                   CALL 036[LCD_write_inst8]
 06F  20013                   CALL 013[delay_1ms]               ;wait >1.64ms for display to clear
 070  20013                   CALL 013[delay_1ms]
 071  01513                   LOAD s5, 13
 072  20028                   CALL 028[LCD_cursor]
 073  0153A                   LOAD s5, 3A                       ;;;;;;;;;;;;;;;;;;;;;;;    :
 074  20045                   CALL 045[LCD_write_data]
 075  01516                   LOAD s5, 16
 076  20028                   CALL 028[LCD_cursor]
 077  0152D                   LOAD s5, 2D                       ;;;;;;;;;;;;;;;;;;;;;;     -
 078  20045                   CALL 045[LCD_write_data]
 079  01520                   LOAD s5, 20
 07A  20028                   CALL 028[LCD_cursor]
 07B  0152D                   LOAD s5, 2D                       ;;;;;;;;;;;;;;;;;;;;;;     -
 07C  20045                   CALL 045[LCD_write_data]
 07D  0152D                   LOAD s5, 2D                       ;;;;;;;;;;;;;;;;;;;;;;     -
 07E  20045                   CALL 045[LCD_write_data]
 07F  0152D                   LOAD s5, 2D                       ;;;;;;;;;;;;;;;;;;;;;;     -
 080  20045                   CALL 045[LCD_write_data]
 081  01528                   LOAD s5, 28
 082  20028                   CALL 028[LCD_cursor]
 083  0152F                   LOAD s5, 2F                       ;;;;;;;;;;;;;;;;;;;;;;     /
 084  20045                   CALL 045[LCD_write_data]
 085  0152B                   LOAD s5, 2B
 086  20028                   CALL 028[LCD_cursor]
 087  0152F                   LOAD s5, 2F                       ;;;;;;;;;;;;;;;;;;;;;;     -
 088  20045                   CALL 045[LCD_write_data]
 089  25000                   RETURN 


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\The Masterpiece!!!\Documents\GitHub\Final-Project\FinalProject\LCD_program.psm



List of defined constants

 CONSTANT name      Value        Source PSM File

 timestamp_hours    14'd         
 timestamp_minutes  40'd         
 timestamp_seconds  35'd         
 datestamp_year     15'd         
 datestamp_month    4'd          
 datestamp_day      24'd         
 NUL                00           
 BEL                07           
 BS                 08           
 HT                 09           
 LF                 0A           
 VT                 0B           
 CR                 0D           
 ESC                1B           
 DEL                7F           
 DCS                90           
 ST                 9C           
 delay_1us_constant 24'd         LCD_program.psm
 delay_2us_constant 48'd         LCD_program.psm
 delay_EN_constant  168'd        LCD_program.psm
 port_up            00           LCD_program.psm
 port_down          01           LCD_program.psm
 port_center        02           LCD_program.psm
 port_data          03           LCD_program.psm
 ascii_SPACE        20           LCD_program.psm
 ascii_EXCLAIM      21           LCD_program.psm
 ascii_DBLQUOT      22           LCD_program.psm
 ascii_NUMSIGN      23           LCD_program.psm
 ascii_DOLLAR       24           LCD_program.psm
 ascii_PERCENT      25           LCD_program.psm
 ascii_AMP          26           LCD_program.psm
 ascii_SINQUOT      27           LCD_program.psm
 ascii_LPAREN       28           LCD_program.psm
 ascii_RPAREN       29           LCD_program.psm
 ascii_ASTERISK     2A           LCD_program.psm
 ascii_PLUS         2B           LCD_program.psm
 ascii_COMMA        2C           LCD_program.psm
 ascii_MINUS        2D           LCD_program.psm
 ascii_PERIOD       2E           LCD_program.psm
 ascii_FWDSLASH     2F           LCD_program.psm
 ascii_0            30           LCD_program.psm
 ascii_1            31           LCD_program.psm
 ascii_2            32           LCD_program.psm
 ascii_3            33           LCD_program.psm
 ascii_4            34           LCD_program.psm
 ascii_5            35           LCD_program.psm
 ascii_6            36           LCD_program.psm
 ascii_7            37           LCD_program.psm
 ascii_8            38           LCD_program.psm
 ascii_9            39           LCD_program.psm
 ascii_COLON        3A           LCD_program.psm
 ascii_SEMI         3B           LCD_program.psm
 ascii_LESS         3C           LCD_program.psm
 ascii_EQUAL        3D           LCD_program.psm
 ascii_GREATER      3E           LCD_program.psm
 ascii_QUESTION     3F           LCD_program.psm
 ascii_CIRCAT       40           LCD_program.psm
 ascii_A            41           LCD_program.psm
 ascii_B            42           LCD_program.psm
 ascii_C            43           LCD_program.psm
 ascii_D            44           LCD_program.psm
 ascii_E            45           LCD_program.psm
 ascii_F            46           LCD_program.psm
 ascii_G            47           LCD_program.psm
 ascii_H            48           LCD_program.psm
 ascii_I            49           LCD_program.psm
 ascii_J            4A           LCD_program.psm
 ascii_K            4B           LCD_program.psm
 ascii_L            4C           LCD_program.psm
 ascii_M            4D           LCD_program.psm
 ascii_N            4E           LCD_program.psm
 ascii_O            4F           LCD_program.psm
 ascii_P            50           LCD_program.psm
 ascii_Q            51           LCD_program.psm
 ascii_R            52           LCD_program.psm
 ascii_S            53           LCD_program.psm
 ascii_T            54           LCD_program.psm
 ascii_U            55           LCD_program.psm
 ascii_V            56           LCD_program.psm
 ascii_W            57           LCD_program.psm
 ascii_X            58           LCD_program.psm
 ascii_Y            59           LCD_program.psm
 ascii_Z            5A           LCD_program.psm
 ascii_LBKT         5B           LCD_program.psm
 ascii_BKSLASH      5C           LCD_program.psm
 ascii_RBKT         5D           LCD_program.psm
 ascii_CARET        5E           LCD_program.psm
 ascii_UNDER        5F           LCD_program.psm
 ascii_TICK         60           LCD_program.psm
 ascii_a            61           LCD_program.psm
 ascii_b            62           LCD_program.psm
 ascii_c            63           LCD_program.psm
 ascii_d            64           LCD_program.psm
 ascii_e            65           LCD_program.psm
 ascii_f            66           LCD_program.psm
 ascii_g            67           LCD_program.psm
 ascii_h            68           LCD_program.psm
 ascii_i            69           LCD_program.psm
 ascii_j            6A           LCD_program.psm
 ascii_k            6B           LCD_program.psm
 ascii_l            6C           LCD_program.psm
 ascii_m            6D           LCD_program.psm
 ascii_n            6E           LCD_program.psm
 ascii_o            6F           LCD_program.psm
 ascii_p            70           LCD_program.psm
 ascii_q            71           LCD_program.psm
 ascii_r            72           LCD_program.psm
 ascii_s            73           LCD_program.psm
 ascii_t            74           LCD_program.psm
 ascii_u            75           LCD_program.psm
 ascii_v            76           LCD_program.psm
 ascii_w            77           LCD_program.psm
 ascii_x            78           LCD_program.psm
 ascii_y            79           LCD_program.psm
 ascii_z            7A           LCD_program.psm
 ascii_LBRACE       7B           LCD_program.psm
 ascii_VBAR         7C           LCD_program.psm
 ascii_RBRACE       7D           LCD_program.psm
 ascii_TILDE        7E           LCD_program.psm
 ascii_DEL          7F           LCD_program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "24 Apr 2015"  
 timestamp$        "14:40:35"     



List of line labels

   Label             Addr  Source PSM File

   delay_1us         002   LCD_program.psm
   wait_1us          003   LCD_program.psm
   delay_2us         006   LCD_program.psm
   wait_2us          007   LCD_program.psm
   delay_EN          00A   LCD_program.psm
   wait_EN           00B   LCD_program.psm
   delay_40us        00E   LCD_program.psm
   wait_40us         00F   LCD_program.psm
   delay_1ms         013   LCD_program.psm
   wait_1ms          014   LCD_program.psm
   delay_2ms         018   LCD_program.psm
   wait_2ms          019   LCD_program.psm
   delay_30ms        01D   LCD_program.psm
   wait_30ms         01E   LCD_program.psm
   pulse_EN          022   LCD_program.psm
   LCD_cursor        028   LCD_program.psm
   set_line2         02E   LCD_program.psm
   LCD_write_inst4   032   LCD_program.psm
   LCD_write_inst8   036   LCD_program.psm
   LCD_write_data    045   LCD_program.psm
   LCD_reset         056   LCD_program.psm
 * LCD_clear         06D   LCD_program.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             35
 STAR              -

 AND               5
 OR                4
 XOR               -

 ADD               -
 ADDCY             -
 SUB               7
 SUBCY             -

 TEST              1
 TESTCY            -
 COMPARE           -
 COMPARECY         -

 SL0               5
 SL1               3
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             -
 OUTPUT            7
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           -

 JUMP              8
 JUMP@             -
 CALL             48
 CALL@             -
 RETURN           14
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
